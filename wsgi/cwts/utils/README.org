* Refresh coded wire tags

The data used to populate the cwts application comes from three
different sources:
- US tags deployed
- Ontario tags deployed
- Tags recovered by OMNR

To refresh the data in cwt application, run the following script in
this order:
1. get_us_grid_centroids.py (optional)
2. get_cwt_data.py
3. get_cwt_recoveries.py

NOTE - the stocking database should be rebuild/updated before
refreshing/rebuilding the cwt database. Some of these tables have
foreign key references to the tables in fsis2.  You will not be able
refresh the stocking database (fsis2) without first clearing cwt.

* get_us_grid_centroids.py

This script calculates the centroid of the 10-minute grids that are
used to report the stocking locations by US agencies.  This script
reads in the shapefile (<FILENAME>) and inserts the resultant centroids into the
table 'cwt_usgrid'.  This script only needs to be run when the
database has been completely reset - once calculated, the centroid of
each us grid will remain unchanged.

TODO - get shapefiles for Lakes Michigan and Superior and calculate
centroids for them.

* get_cwt_data.py

This script aggregates cwts from cwt_master and the OMNR's CWT
inventory.  Use

#this script migrates data from 'cwt master' and inserts into the
#database associated with a django application (cwts).  The US and
#Ontario tags are imported seperately and appended into the same
#table.  The US tags come from a table "~/US_CWTs/WhatThe_USCWTS.mdb"
#while the ontario tags are derived from a query in
#~/CWTcodes_InventoryUGLMUv1.mdb


* get_cwt_recoveries.py

This scripts updates the cwt_recovery table in fsis2 database.
Currently the data is retrieved from grandwazoo2, although thought
should be given to collecting the data directly from each of our
master databases.  This script should be re-run each year (or more
often when master databases are updated)


* Management Zone Shapefiles

** fsis2_managementunit

The management zone geometries are created from shapefiles.qma and
shapefiles.ltrz tables (assumes that they have already been imported
into a postgis schema for shapefiles.).  They can be appended in the
tale fsis2_managementunit following the steps in this script:
[[c:/1work/Python/djcode/fsis2/utils/populate_fsis2_managementunits.sql]]
